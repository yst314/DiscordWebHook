import os

# 環境変数から各種キー/URLを取得
GOOGLE_API_KEY: str = os.getenv("GOOGLE_API_KEY", "")
DISCORD_WEBHOOK_URL: str = os.getenv("DISCORD_WEBHOOK_URL", "")

# GeminiモデルID
GEMINI_MODEL_ID: str = os.getenv("GEMINI_MODEL_ID", "gemini-2.5-flash-preview-04-17")

# Geminiに渡すプロンプトテンプレート
GEMINI_PROMPT_TEMPLATE = """\
日付：{calculated_date}

指示：
1. Groundingツールを使用して最新の信頼できる情報にアクセスし、**{calculated_date}** の**終値**を見つけてください。各指標について、**最も一般的に報告されているか、または最終的な終値と思われる単一の値**を選んでください：
    - 日経平均 (Nikkei 225)
    - S&P 500
    - ダウ平均 (DJIA)
    - ナスダック総合 (NASDAQ Composite)
    - 米ドル/円 (USD/JPY)
    - ユーロ/米ドル (EUR/USD)
    - ビットコイン (BTC/USD)
    - イーサリアム (ETH/USD)
    - 金スポット価格 (XAU/USD)
    - 銀スポット価格 (XAG/USD)
2. **{calculated_date}** または翌朝の、市場全体のムードやこれらの特定の指標に関連する主要な金融ニュースヘッドラインを3〜5件見つけてください。日本株、日経についての情報も見つけてください。
3. 出力全体をDiscordで見やすいようにMarkdownを使用してフォーマットしてください。具体的には、タイトルやセクション見出しには太字を使用し、リストには箇条書き（ハイフン `-` またはアスタリスク `*`）を使用してください。
4. 最初にタイトル「**{calculated_date} の金融市場サマリー**」を付けてください。
5. 各指標とその**終値**を「指標名: 価格」の形式で、箇条書きとしてリストしてください。**価格は必ず単一の値としてください（例: ドル円: 155.00）**。価格が利用できない場合は「N/A」を使用してください。
6. 価格リストの後、新しい行にセクションタイトル「**主要ニュースヘッドライン:**」を追加してください。
7. そのタイトルの下に、ニュースヘッドラインを箇条書きとしてリストしてください。
8. 最終的な出力は、要求されたテキストコンテンツのみとしてください。

出力開始：
"""
